// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://admin:abhinav@cluster0.1uknr.mongodb.net/cricket?retryWrites=true&w=majority&appName=Cluster0"
}

model Match{
  id          String        @id @default(auto())    @map("_id")   @db.ObjectId
  team1       String          
  team2       String      
  innings     Inning[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Inning {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  matchId String   @db.ObjectId
  match   Match    @relation(fields: [matchId], references: [id])
  team    String
  overs   Over[]
  extras  Extras?
  total   Int      @default(0)
  wickets Int      @default(0)
  balls   Int      @default(0)
}

model Over{
  id          String        @id   @default(auto())    @map("_id")   @db.ObjectId
  inningId    String        @db.ObjectId
  inning      Inning        @relation(fields: [inningId] , references: [id])
  number      Int
  balls       Ball[]
  runs        Int           @default(0)
  wickets     Int           @default(0)
}

model Ball{
  id          String        @id   @default(auto())    @map("_id")   @db.ObjectId
  overId      String        @db.ObjectId
  over        Over          @relation(fields: [overId] , references: [id])
  number      Int
  runs        Int           @default(0)
  isWide      Boolean       @default(false)
  isNoBall    Boolean       @default(false)
  isBye       Boolean       @default(false)
  isLegBye    Boolean       @default(false)
  isWicket    Boolean       @default(false)
  isOverthrow Boolean       @default(false)
  batsmanId   String        @db.ObjectId
  bowlerId    String        @db.ObjectId
  batsman     Player        @relation("BatsmanBalls", fields: [batsmanId], references: [id])
  bowler      Player        @relation("BowlerBalls", fields: [bowlerId], references: [id])
}

model Player {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  team         String
  runsScored   Int    @default(0)
  ballsFaced   Int    @default(0)
  fours        Int    @default(0)
  sixes        Int    @default(0)
  wicketsTaken Int    @default(0)
  oversBowled  Float  @default(0)
  runsConceded Int    @default(0)
  maidens      Int    @default(0)
  ballsBowled  Ball[] @relation("BowlerBalls")
  ballsFacedBy Ball[] @relation("BatsmanBalls")
}

model Extras {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  inningId String @unique @db.ObjectId
  inning   Inning @relation(fields: [inningId], references: [id])
  wides    Int    @default(0)
  noBalls  Int    @default(0)
  byes     Int    @default(0)
  legByes  Int    @default(0)
}
